{"version":3,"sources":["webpack:///./src/components/ProjectCard.jsx","webpack:///./src/pages/work.js"],"names":["ProjectCardContainer","dimensions","maxwidthTablet","maxwidthMobile","colors","blue500","ProjectCardContent","ProjectCardTitle","ProjectCardBlurb","ProjectCardAction","ProjectCardImageContainer","grey200","linkStyle","color","textDecoration","ProjectCard","title","description","thumbnail","link","href","style","target","rel","className","text","RichText","render","src","url","alt","WorkTitle","Work","projects","meta","titleTemplate","name","content","property","author","concat","Layout","map","project","i","key","category","node","project_category","project_title","project_preview_description","project_preview_thumbnail","uid","_meta","project_link","query","data","prismic","allProjects","edges","site","siteMetadata"],"mappings":"oOAOMA,EAAuB,YAAO,MAAP,qBAAH,8PAaHC,IAAWC,eAbR,oDAiBHD,IAAWE,eAjBR,oIA0BXC,IAAOC,QA1BI,qRAgDpBC,EAAqB,YAAO,MAAP,qBAAH,sJAYNF,IAAOC,QAZD,mJAsBDJ,IAAWC,eAtBV,oBA2BlBK,EAAmB,YAAO,KAAP,qBAAH,iEAKhBC,EAAmB,YAAO,MAAP,qBAAH,4EAKCP,IAAWC,eALZ,6BAUhBO,EAAoB,YAAO,MAAP,qBAAH,iOAcjBC,EAA4B,YAAO,MAAP,qBAAH,cACfN,IAAOO,QADQ,kJAURV,IAAWC,eAVH,8LAyBbE,IAAOC,QAzBM,oLAqCNJ,IAAWC,eArCL,6CA4CzBU,EAAY,CACdC,MAAO,eACPC,eAAgB,QAoBLC,EAjBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,KAAlC,OAClB,iBAAGC,KAAMD,EAAME,MAAOT,EAAWU,OAAO,SAASC,IAAI,uBACnD,YAACvB,EAAD,KACE,YAACM,EAAD,CAAoBkB,UAAU,sBAC5B,YAACjB,EAAD,KAAmBS,EAAM,GAAGS,MAC5B,YAACjB,EAAD,KAAmBkB,WAASC,OAAOV,IACnC,YAACR,EAAD,CAAmBe,UAAU,qBAA7B,QACO,+BAGT,YAACd,EAAD,CAA2Bc,UAAU,6BACnC,mBAAKI,IAAKV,EAAUW,IAAKC,IAAKd,EAAM,GAAGS,W,sCCnK/C,IAAMM,EAAY,YAAO,KAAP,qBAAH,6CAITC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACT,8BACI,YAAC,IAAD,CACIlB,MAAK,gBACLmB,cAAa,gBACbD,KAAM,CACF,CACIE,KAAK,cACLC,QAASH,EAAKjB,aAElB,CACIqB,SAAS,WACTD,QAAQ,iCAEZ,CACIC,SAAS,iBACTD,QAASH,EAAKjB,aAElB,CACIqB,SAAS,UACTD,QAAQ,WAEZ,CACID,KAAK,eACLC,QAAQ,WAEZ,CACID,KAAK,kBACLC,QAASH,EAAKK,QAElB,CACIH,KAAK,gBACLC,QAASH,EAAKlB,OAElB,CACIoB,KAAK,sBACLC,QAASH,EAAKjB,cAEpBuB,OAAON,KAEb,YAACO,EAAA,EAAD,KACI,YAACV,EAAD,aAGA,8BACKE,EAASS,KAAI,SAACC,EAASC,GAAV,OACV,YAAC,EAAD,CACIC,IAAKD,EACLE,SAAUH,EAAQI,KAAKC,iBACvBhC,MAAO2B,EAAQI,KAAKE,cACpBhC,YAAa0B,EAAQI,KAAKG,4BAC1BhC,UAAWyB,EAAQI,KAAKI,0BACxBC,IAAKT,EAAQI,KAAKM,MAAMD,IACxBjC,KAAMwB,EAAQI,KAAKO,aAAazB,aAsB3C0B,GAdE,sBAAe,IAAZC,EAAW,EAAXA,KACRvB,EAAWuB,EAAKC,QAAQC,YAAYC,MACpCzB,EAAOsB,EAAKI,KAAKC,aACvB,OAAK5B,EAGD,YAAC,EAAD,CAAMA,SAAUA,EAAUC,KAAMA,IAHd,MAWR","file":"component---src-pages-work-js-64705903a0f939bce636.js","sourcesContent":["import React from \"react\"\r\nimport { RichText } from \"prismic-reactjs\"\r\nimport styled from \"@emotion/styled\"\r\nimport dimensions from \"styles/dimensions\"\r\nimport colors from \"styles/colors\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst ProjectCardContainer = styled(\"div\")`\r\n  display: grid;\r\n  grid-template-columns: 4fr 7fr;\r\n  box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.06);\r\n  margin-bottom: 4em;\r\n  transition: all 150ms ease-in-out;\r\n  text-decoration: none;\r\n  color: currentColor;\r\n\r\n  @media (max-width: 950px) {\r\n    grid-template-columns: 4.5fr 7fr;\r\n  }\r\n\r\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\r\n    margin-bottom: 2em;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.1);\r\n    transition: all 150ms ease-in-out;\r\n\r\n    .ProjectCardAction {\r\n      color: ${colors.blue500};\r\n      transition: all 150ms ease-in-out;\r\n\r\n      span {\r\n        transform: translateX(0px);\r\n        opacity: 1;\r\n        transition: transform 150ms ease-in-out;\r\n      }\r\n    }\r\n\r\n    .ProjectCardContent::before {\r\n      opacity: 0.02;\r\n      transition: all 150ms ease-in-out;\r\n    }\r\n\r\n    .ProjectCardImageContainer::before {\r\n      opacity: 0.2;\r\n      transition: all 150ms ease-in-out;\r\n    }\r\n  }\r\n`\r\n\r\nconst ProjectCardContent = styled(\"div\")`\r\n  background: white;\r\n  padding: 4em 3em 2.25em 3em;\r\n  position: relative;\r\n\r\n  &:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    background: ${colors.blue500};\r\n    mix-blend-mode: multiply;\r\n    opacity: 0;\r\n    transition: all 150ms ease-in-out;\r\n  }\r\n\r\n  @media (max-width: 950px) {\r\n    padding: 3.25em 2.5em 2em 2.5em;\r\n  }\r\n\r\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\r\n    grid-row: 2;\r\n  }\r\n`\r\n\r\nconst ProjectCardTitle = styled(\"h3\")`\r\n  margin-bottom: 0.5em;\r\n  margin-top: 0.5em;\r\n`\r\n\r\nconst ProjectCardBlurb = styled(\"div\")`\r\n  margin-bottom: 0.5em;\r\n  margin-top: 0.5em;\r\n  margin-bottom: 5em;\r\n\r\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\r\n    margin-bottom: 2.5em;\r\n  }\r\n`\r\n\r\nconst ProjectCardAction = styled(\"div\")`\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  color: currentColor;\r\n  transition: all 150ms ease-in-out;\r\n\r\n  span {\r\n    margin-left: 1em;\r\n    transform: translateX(-8px);\r\n    display: inline-block;\r\n    transition: transform 400ms ease-in-out;\r\n  }\r\n`\r\n\r\nconst ProjectCardImageContainer = styled(\"div\")`\r\n  background: ${colors.grey200};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  position: relative;\r\n  padding-left: 2em;\r\n  padding-right: 2em;\r\n\r\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\r\n    padding-top: 3em;\r\n    max-height: 200px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  &:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    background: ${colors.blue500};\r\n    mix-blend-mode: multiply;\r\n    opacity: 0;\r\n    transition: all 150ms ease-in-out;\r\n  }\r\n\r\n  img {\r\n    flex-shrink: 0;\r\n    min-width: 100%;\r\n    min-height: 100%\r\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.04);\r\n\r\n    @media (max-width: ${dimensions.maxwidthTablet}px) {\r\n      max-width: 350px;\r\n      margin-bottom: 40px;\r\n    }\r\n  }\r\n`\r\n\r\nconst linkStyle = {\r\n    color: \"currentColor\",\r\n    textDecoration: \"none\"\r\n};\r\n\r\nconst ProjectCard = ({ title, description, thumbnail, link }) => (\r\n  <a href={link} style={linkStyle} target=\"_blank\" rel=\"noopener noreferrer\">\r\n    <ProjectCardContainer>\r\n      <ProjectCardContent className=\"ProjectCardContent\">\r\n        <ProjectCardTitle>{title[0].text}</ProjectCardTitle>\r\n        <ProjectCardBlurb>{RichText.render(description)}</ProjectCardBlurb>\r\n        <ProjectCardAction className=\"ProjectCardAction\">\r\n          More <span>&#8594;</span>\r\n        </ProjectCardAction>\r\n      </ProjectCardContent>\r\n      <ProjectCardImageContainer className=\"ProjectCardImageContainer\">\r\n        <img src={thumbnail.url} alt={title[0].text} />\r\n      </ProjectCardImageContainer>\r\n    </ProjectCardContainer>\r\n  </a>\r\n)\r\n\r\nexport default ProjectCard\r\n\r\nProjectCard.propTypes = {\r\n  category: PropTypes.array.isRequired,\r\n  thumbnail: PropTypes.object.isRequired,\r\n  title: PropTypes.array.isRequired,\r\n  description: PropTypes.array.isRequired,\r\n  uid: PropTypes.string.isRequired,\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport styled from \"@emotion/styled\";\r\nimport Layout from \"components/Layout\";\r\nimport ProjectCard from \"components/ProjectCard\";\r\n\r\nconst WorkTitle = styled(\"h1\")`\r\n    margin-bottom: 1em;\r\n`\r\n\r\nconst Work = ({ projects, meta }) => (\r\n    <>\r\n        <Helmet\r\n            title={`Vanaj Moorthy`}\r\n            titleTemplate={`Vanaj Moorthy`}\r\n            meta={[\r\n                {\r\n                    name: `description`,\r\n                    content: meta.description,\r\n                },\r\n                {\r\n                    property: `og:title`,\r\n                    content: `Vanaj Moorthy's Personal Site`,\r\n                },\r\n                {\r\n                    property: `og:description`,\r\n                    content: meta.description,\r\n                },\r\n                {\r\n                    property: `og:type`,\r\n                    content: `website`,\r\n                },\r\n                {\r\n                    name: `twitter:card`,\r\n                    content: `summary`,\r\n                },\r\n                {\r\n                    name: `twitter:creator`,\r\n                    content: meta.author,\r\n                },\r\n                {\r\n                    name: `twitter:title`,\r\n                    content: meta.title,\r\n                },\r\n                {\r\n                    name: `twitter:description`,\r\n                    content: meta.description,\r\n                },\r\n            ].concat(meta)}\r\n        />\r\n        <Layout>\r\n            <WorkTitle>\r\n                Work\r\n            </WorkTitle>\r\n            <>\r\n                {projects.map((project, i) => (\r\n                    <ProjectCard\r\n                        key={i}\r\n                        category={project.node.project_category}\r\n                        title={project.node.project_title}\r\n                        description={project.node.project_preview_description}\r\n                        thumbnail={project.node.project_preview_thumbnail}\r\n                        uid={project.node._meta.uid}\r\n                        link={project.node.project_link.url}\r\n                    />\r\n                ))}\r\n            </>\r\n        </Layout>\r\n    </>\r\n);\r\n\r\nexport default ({ data }) => {\r\n    const projects = data.prismic.allProjects.edges;\r\n    const meta = data.site.siteMetadata;\r\n    if (!projects) return null;\r\n\r\n    return (\r\n        <Work projects={projects} meta={meta}/>\r\n    )\r\n}\r\n\r\nWork.propTypes = {\r\n    projects: PropTypes.array.isRequired,\r\n};\r\n\r\nexport const query = graphql`\r\n    {\r\n        prismic {\r\n            allProjects {\r\n                edges {\r\n                    node {\r\n                        project_title\r\n                        project_preview_description\r\n                        project_preview_thumbnail\r\n                        project_category\r\n                        project_link {\r\n                            __typename \r\n                            ... on PRISMIC__ExternalLink{\r\n                                url\r\n                              }\r\n                        }\r\n                        project_post_date\r\n                        _meta {\r\n                            uid\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        site {\r\n            siteMetadata {\r\n                title\r\n                description\r\n                author\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n"],"sourceRoot":""}