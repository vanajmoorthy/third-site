{"version":3,"sources":["webpack:///./src/components/PostCard.jsx","webpack:///./src/pages/code.js"],"names":["PostCardContainer","Link","colors","grey200","blue500","PostTitle","PostMetas","grey600","PostDescription","PostCardAction","PostCard","title","description","uid","className","to","text","RichText","render","BlogTitle","BlogGrid","dimensions","maxwidthMobile","Blog","posts","meta","titleTemplate","name","content","property","author","concat","Layout","map","post","i","key","node","post_author","category","post_category","post_title","date","post_date","post_preview_description","_meta","query","data","prismic","allPosts","edges","site","siteMetadata"],"mappings":"oOAOMA,EAAoB,YAAOC,OAAP,sBAAH,oBACCC,IAAOC,QADR,gUAiBFD,IAAOE,QAjBL,yHA6BjBC,EAAY,YAAO,KAAP,sBAAH,sDAKTC,EAAY,YAAO,MAAP,sBAAH,yGAMFJ,IAAOK,QANL,KASTC,EAAkB,YAAO,MAAP,sBAAH,qFASfC,EAAiB,YAAO,MAAP,sBAAH,iOA+BLC,EAjBE,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,IAAtB,OACb,YAACb,EAAD,CAAmBc,UAAU,eAAeC,GAAE,IAAMF,GAChD,YAACR,EAAD,KACKM,EAAM,GAAGK,MAEd,YAACR,EAAD,KACKS,WAASC,OAAON,IAErB,YAACH,EAAD,CAAgBK,UAAU,kBAA1B,SACU,8BAEV,YAACR,EAAD,Q,sCC3ER,IAAMa,EAAY,YAAO,KAAP,sBAAH,6CAITC,EAAW,YAAO,MAAP,sBAAH,iKAUUC,IAAWC,eAVrB,kDAgBRC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACT,8BACI,YAAC,IAAD,CACId,MAAK,gBACLe,cAAa,gBACbD,KAAM,CACF,CACIE,KAAK,gCACLC,QAASH,EAAKb,aAElB,CACIiB,SAAS,WACTD,QAAQ,iCAEZ,CACIC,SAAS,iBACTD,QAASH,EAAKb,aAElB,CACIiB,SAAS,UACTD,QAAQ,WAEZ,CACID,KAAK,eACLC,QAAQ,WAEZ,CACID,KAAK,kBACLC,QAASH,EAAKK,QAElB,CACIH,KAAK,gBACLC,QAASH,EAAKd,OAElB,CACIgB,KAAK,sBACLC,QAASH,EAAKb,cAEpBmB,OAAON,KAEb,YAACO,EAAA,EAAD,KACI,YAACb,EAAD,aAGA,YAACC,EAAD,KACKI,EAAMS,KAAI,SAACC,EAAMC,GAAP,OACP,YAAC,EAAD,CACIC,IAAKD,EACLL,OAAQI,EAAKG,KAAKC,YAClBC,SAAUL,EAAKG,KAAKG,cACpB7B,MAAOuB,EAAKG,KAAKI,WACjBC,KAAMR,EAAKG,KAAKM,UAChB/B,YAAasB,EAAKG,KAAKO,yBACvB/B,IAAKqB,EAAKG,KAAKQ,MAAMhC,aAwBhCiC,GAhBE,sBAAe,IAAZC,EAAW,EAAXA,KACRvB,EAAQuB,EAAKC,QAAQC,SAASC,MAC9BzB,EAAOsB,EAAKI,KAAKC,aACvB,OAAK5B,EAGD,YAAC,EAAD,CAAMA,MAAOA,EAAOC,KAAMA,IAHX,MAaL","file":"component---src-pages-code-js-511a31b36c429103783c.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { RichText } from \"prismic-reactjs\";\nimport styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport PropTypes from \"prop-types\";\n\nconst PostCardContainer = styled(Link)`\n    border: 1px solid ${colors.grey200};\n    padding: 3em 2.5em 2.25em 2.5em;\n    border-radius: 3px;\n    text-decoration: none;\n    color: currentColor;\n    display: flex;\n    flex-direction: column;\n    box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.06);\n    transition: all 150ms ease-in-out;\n\n    &:hover {\n        box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.1);\n        transition: all 150ms ease-in-out;\n        cursor: pointer;\n\n        .PostCardAction {\n            color: ${colors.blue500};\n            transition: all 150ms ease-in-out;\n\n            span {\n                transform: translateX(0px);\n                opacity: 1;\n                transition: transform 150ms ease-in-out;\n            }\n        }\n    }\n`\n\nconst PostTitle = styled(\"h3\")`\n    margin: 0;\n    margin-top: 0.5em;\n`\n\nconst PostMetas = styled(\"div\")`\n    display: flex;\n    align-items: center;\n    margin-top: 1.5em;\n    justify-content: space-between;\n    font-size: 0.85em;\n    color: ${colors.grey600};\n`\n\nconst PostDescription = styled(\"div\")`\n    margin-top: 2em;\n    margin-bottom: 4em;\n\n    p:last-of-type {\n        margin: 0;\n    }\n`\n\nconst PostCardAction = styled(\"div\")`\n    font-weight: 600;\n    text-decoration: none;\n    color: currentColor;\n    transition: all 150ms ease-in-out;\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        transition: transform 400ms ease-in-out;\n    }\n`\n\nconst PostCard = ({title, description, uid}) => (\n    <PostCardContainer className=\"BlogPostCard\" to={`/${uid}`}>\n        <PostTitle>\n            {title[0].text}\n        </PostTitle>\n        <PostDescription>\n            {RichText.render(description)}\n        </PostDescription>\n        <PostCardAction className=\"PostCardAction\">\n            Visit <span>&#8594;</span>\n        </PostCardAction>\n        <PostMetas>\n            \n        </PostMetas>\n    </PostCardContainer>\n)\n\nexport default PostCard;\n\nPostCard.propTypes = {\n    author: PropTypes.string.isRequired,\n    category: PropTypes.array.isRequired,\n    date: PropTypes.string.isRequired,\n    title: PropTypes.array.isRequired,\n    description: PropTypes.array.isRequired,\n    uid: PropTypes.string.isRequired\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport styled from \"@emotion/styled\";\r\nimport dimensions from \"styles/dimensions\";\r\nimport Layout from \"components/Layout\";\r\nimport PostCard from \"components/PostCard\";\r\n\r\nconst BlogTitle = styled(\"h1\")`\r\n    margin-bottom: 1em;\r\n`\r\n\r\nconst BlogGrid = styled(\"div\")`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-gap: 2.5em;\r\n\r\n    @media(max-width: 1050px) {\r\n        grid-template-columns: repeat(2, 1fr);\r\n        grid-gap: 1.5em;\r\n    }\r\n\r\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\r\n        grid-template-columns: 1fr;\r\n        grid-gap: 2.5em;\r\n    }\r\n`\r\n\r\nconst Blog = ({ posts, meta }) => (\r\n    <>\r\n        <Helmet\r\n            title={`Vanaj Moorthy`}\r\n            titleTemplate={`Vanaj Moorthy`}\r\n            meta={[\r\n                {\r\n                    name: `Vanaj Moorthy's personal site`,\r\n                    content: meta.description,\r\n                },\r\n                {\r\n                    property: `og:title`,\r\n                    content: `Vanaj Moorthy's personal site`,\r\n                },\r\n                {\r\n                    property: `og:description`,\r\n                    content: meta.description,\r\n                },\r\n                {\r\n                    property: `og:type`,\r\n                    content: `website`,\r\n                },\r\n                {\r\n                    name: `twitter:card`,\r\n                    content: `summary`,\r\n                },\r\n                {\r\n                    name: `twitter:creator`,\r\n                    content: meta.author,\r\n                },\r\n                {\r\n                    name: `twitter:title`,\r\n                    content: meta.title,\r\n                },\r\n                {\r\n                    name: `twitter:description`,\r\n                    content: meta.description,\r\n                },\r\n            ].concat(meta)}\r\n        />\r\n        <Layout>\r\n            <BlogTitle>\r\n                Code\r\n            </BlogTitle>\r\n            <BlogGrid>\r\n                {posts.map((post, i) => (\r\n                    <PostCard\r\n                        key={i}\r\n                        author={post.node.post_author}\r\n                        category={post.node.post_category}\r\n                        title={post.node.post_title}\r\n                        date={post.node.post_date}\r\n                        description={post.node.post_preview_description}\r\n                        uid={post.node._meta.uid}\r\n                    />\r\n                ))}\r\n            </BlogGrid>\r\n        </Layout>\r\n    </>\r\n);\r\n\r\nexport default ({ data }) => {\r\n    const posts = data.prismic.allPosts.edges;\r\n    const meta = data.site.siteMetadata;\r\n    if (!posts) return null;\r\n\r\n    return (\r\n        <Blog posts={posts} meta={meta}/>\r\n    )\r\n}\r\n\r\nBlog.propTypes = {\r\n    posts: PropTypes.array.isRequired,\r\n    meta: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport const query = graphql`\r\n    {\r\n        prismic {\r\n            allPosts(sortBy: post_title_DESC) {\r\n                edges {\r\n                    node {\r\n                        post_title\r\n                        post_category\r\n                        post_preview_description\r\n                        post_hero_annotation\r\n                        post_body\r\n                        _meta {\r\n                            uid\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        site {\r\n            siteMetadata {\r\n                title\r\n                description\r\n                author\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n"],"sourceRoot":""}